name: Android CI

on:
  push:
    branches:
      - "*"

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [34]
        target: [default, google_apis]
    steps:
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
      - name: Clear SDK Repository Cache
        run: |
          rm -rf $HOME/.android/cache
      - name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: "zulu"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          java-version: '17'

      - name: checkout
        uses: actions/checkout@v4

      - name: Enable KVM (not applicable on macOS)
        if: runner.os == 'Linux'
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Launch Emulator Manually
        run: |
          # Install necessary system images and create an AVD
          echo "y" | sdkmanager "system-images;android-${{ matrix.api-level }};${{ matrix.target }};x86_64"
          echo "no" | avdmanager create avd -n testAVD -k "system-images;android-${{ matrix.api-level }};${{ matrix.target }};x86_64" --force
          # Start emulator
          $ANDROID_HOME/emulator/emulator -avd testAVD -no-audio -no-boot-anim -no-window -verbose &
          EMULATOR_PID=$!
          # Wait for emulator to start
          adb wait-for-device
          # Check device status
          until adb shell 'getprop sys.boot_completed' | grep -m 1 '1'; do
            echo "Waiting for emulator to fully boot..."
            sleep 15
          done
          echo "Emulator is online and ready!"
        timeout-minutes: 2  # Specify a timeout to prevent hanging indefinitely


      - name: Check Emulator Status and Print Message
        run: |
          # Wait for emulator to start
          adb wait-for-device
          
          # Poll for emulator status
          until adb shell 'getprop sys.boot_completed' | grep -m 1 '1'; do
            echo "Waiting for emulator to fully boot..."
            sleep 15
          done
          
          # Print a colorful message
          echo -e "\033[0;32mEmulator is online and ready!\033[0m"

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus_6
          script: -|
            echo "Henlo my fren [ 1 ]"
            echo "Henlo my fren [ 2 ]"







